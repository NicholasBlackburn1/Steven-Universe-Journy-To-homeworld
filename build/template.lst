         w __deregister_frame_info
         w __gnu_Unwind_Find_exidx
         w _ITM_deregisterTMCloneTable
         w _ITM_registerTMCloneTable
         w __register_frame_info
00000000 00000401 b __fixedpath
00000000 b .LANCHOR4
00000000 a shift
00000000 a shift
00000000 b _TLS_MODULE_BASE_
00000404 b .LANCHOR5
00000404 00000802 b __utf16path
00000c08 b .LANCHOR6
00000c08 00000802 b __utf16path_old.0
00100000 A __start__
00100000 T _start
00100008 T __service_ptr
0010000c T __apt_appid
00100010 T __heap_size
00100014 T __linear_heap_size
00100018 T __system_arglist
0010001c T __system_runflags
00100020 t startup
00100058 t ClearMem
0010006c t ClrLoop
00100094 T _init
001000ac T __aeabi_uidiv
001000ac 000001ec T __udivsi3
001000ac t .udivsi3_skip_div0_test
00100298 00000020 T __aeabi_uidivmod
001002b8 T __aeabi_idiv
001002b8 00000220 T __divsi3
001002c0 t .divsi3_skip_div0_test
001004d8 00000020 T __aeabi_idivmod
001004f8 00000004 W __aeabi_idiv0
001004f8 00000004 W __aeabi_ldiv0
001004fc T __aeabi_drsub
00100504 000002b0 T __aeabi_dsub
00100504 000002b0 T __subdf3
00100508 000002ac T __adddf3
00100508 000002ac T __aeabi_dadd
001007b4 00000024 T __aeabi_ui2d
001007b4 00000024 T __floatunsidf
001007d8 00000028 T __aeabi_i2d
001007d8 00000028 T __floatsidf
00100800 00000048 T __aeabi_f2d
00100800 00000048 T __extendsfdf2
00100848 00000074 T __aeabi_ul2d
00100848 00000074 T __floatundidf
0010085c 00000060 T __aeabi_l2d
0010085c 00000060 T __floatdidf
001008bc T __aeabi_uldivmod
001008f8 00000014 T __restore_core_regs
001008f8 00000014 T restore_core_regs
0010090c T __gnu_Unwind_Restore_VFP
00100914 T __gnu_Unwind_Save_VFP
0010091c T __gnu_Unwind_Restore_VFP_D
00100924 T __gnu_Unwind_Save_VFP_D
0010092c T __gnu_Unwind_Restore_VFP_D_16_to_31
00100934 T __gnu_Unwind_Save_VFP_D_16_to_31
0010093c T __gnu_Unwind_Restore_WMMXD
00100980 T __gnu_Unwind_Save_WMMXD
001009c4 T __gnu_Unwind_Restore_WMMXC
001009d8 T __gnu_Unwind_Save_WMMXC
001009ec 00000024 T ___Unwind_RaiseException
001009ec 00000024 T _Unwind_RaiseException
00100a10 00000024 T ___Unwind_Resume
00100a10 00000024 T _Unwind_Resume
00100a34 00000024 T ___Unwind_Resume_or_Rethrow
00100a34 00000024 T _Unwind_Resume_or_Rethrow
00100a58 00000024 T ___Unwind_ForcedUnwind
00100a58 00000024 T _Unwind_ForcedUnwind
00100a7c 00000024 T ___Unwind_Backtrace
00100a7c 00000024 T _Unwind_Backtrace
00100aa8 00000390 T strcmp
00100e30 t deregister_tm_clones
00100e5c t register_tm_clones
00100e94 t __do_global_dtors_aux
00100ed8 t frame_dummy
00100f0c 00000154 T main
00101060 000000a8 T m3d::Applet::Applet()
00101060 000000a8 T m3d::Applet::Applet()
00101108 00000054 T m3d::Applet::~Applet()
00101108 00000054 T m3d::Applet::~Applet()
0010115c 00000034 T m3d::Applet::isRunning()
00101190 0000000c T m3d::Applet::exit()
0010119c 00000024 T m3d::Sprite::draw(m3d::RenderContext)
001011c0 0000008c T m3d::Sprite::setSpriteSheet(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
0010124c 00000088 T m3d::Sprite::updateTint()
001012d4 000000a0 T m3d::Sprite::Sprite(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
001012d4 000000a0 T m3d::Sprite::Sprite(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
00101374 0000001c T m3d::Color::Color(unsigned char, unsigned char, unsigned char)
00101374 0000001c T m3d::Color::Color(unsigned char, unsigned char, unsigned char)
00101390 0000001c T m3d::Color::Color(unsigned char, unsigned char, unsigned char, unsigned char)
00101390 0000001c T m3d::Color::Color(unsigned char, unsigned char, unsigned char, unsigned char)
001013ac 00000008 T m3d::Color::getRed()
001013b4 00000008 T m3d::Color::getGreen()
001013bc 00000008 T m3d::Color::getBlue()
001013c4 00000008 T m3d::Color::getRgba8()
001013cc 0000001c T m3d::Color::getRgb8()
001013e8 00000008 t std::_Function_handler<bool (), m3d::Screen::drawTop(m3d::Drawable&, m3d::RenderContext::Mode, int)::{lambda()#1}>::_M_invoke(std::_Any_data const&)
001013f0 00000060 t m3d::Screen::prepareFog(m3d::RenderContext::ScreenTarget) [clone .part.0]
00101450 00000058 t std::_Function_handler<bool (), m3d::Screen::drawTop(m3d::Drawable&, m3d::RenderContext::Mode, int)::{lambda()#4}>::_M_manager(std::_Any_data&, std::_Function_handler<bool (), m3d::Screen::drawTop(m3d::Drawable&, m3d::RenderContext::Mode, int)::{lambda()#4}> const&, std::_Manager_operation)
001014a8 00000058 t std::_Function_handler<bool (), m3d::Screen::drawTop(m3d::Drawable&, m3d::RenderContext::Mode, int)::{lambda()#3}>::_M_manager(std::_Any_data&, std::_Function_handler<bool (), m3d::Screen::drawTop(m3d::Drawable&, m3d::RenderContext::Mode, int)::{lambda()#3}> const&, std::_Manager_operation)
00101500 00000058 t std::_Function_handler<bool (), m3d::Screen::drawTop(m3d::Drawable&, m3d::RenderContext::Mode, int)::{lambda()#2}>::_M_manager(std::_Any_data&, std::_Function_handler<bool (), m3d::Screen::drawTop(m3d::Drawable&, m3d::RenderContext::Mode, int)::{lambda()#2}> const&, std::_Manager_operation)
00101558 00000058 t std::_Function_handler<bool (), m3d::Screen::drawTop(m3d::Drawable&, m3d::RenderContext::Mode, int)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_handler<bool (), m3d::Screen::drawTop(m3d::Drawable&, m3d::RenderContext::Mode, int)::{lambda()#1}> const&, std::_Manager_operation)
001015b0 00000008 t std::_Function_handler<bool (), m3d::Screen::drawTop(m3d::Drawable&, m3d::RenderContext::Mode, int)::{lambda()#2}>::_M_invoke(std::_Any_data const&)
001015b8 00000008 t std::_Function_handler<bool (), m3d::Screen::drawTop(m3d::Drawable&, m3d::RenderContext::Mode, int)::{lambda()#3}>::_M_invoke(std::_Any_data const&)
001015c0 00000008 t std::_Function_handler<bool (), m3d::Screen::drawTop(m3d::Drawable&, m3d::RenderContext::Mode, int)::{lambda()#4}>::_M_invoke(std::_Any_data const&)
001015c8 00000078 t std::_Rb_tree<int, std::pair<int const, std::vector<std::pair<m3d::Drawable*, std::function<bool ()> >, std::allocator<std::pair<m3d::Drawable*, std::function<bool ()> > > > >, std::_Select1st<std::pair<int const, std::vector<std::pair<m3d::Drawable*, std::function<bool ()> >, std::allocator<std::pair<m3d::Drawable*, std::function<bool ()> > > > > >, std::less<int>, std::allocator<std::pair<int const, std::vector<std::pair<m3d::Drawable*, std::function<bool ()> >, std::allocator<std::pair<m3d::Drawable*, std::function<bool ()> > > > > > >::_M_erase(std::_Rb_tree_node<std::pair<int const, std::vector<std::pair<m3d::Drawable*, std::function<bool ()> >, std::allocator<std::pair<m3d::Drawable*, std::function<bool ()> > > > > >*) [clone .isra.0]
00101640 00000074 T m3d::Screen::~Screen()
00101640 00000074 T m3d::Screen::~Screen()
001016b4 00000074 T m3d::Screen::clear()
00101728 000003f0 T m3d::Screen::Screen(bool)
00101728 000003f0 T m3d::Screen::Screen(bool)
00101b18 000000e0 T m3d::Screen::prepare()
00101bf8 0000006c T m3d::Screen::prepareFog(m3d::RenderContext::ScreenTarget)
00101c64 00000b5c T m3d::Screen::render(bool)
001027c0 000001cc W void std::vector<std::pair<m3d::Drawable*, std::function<bool ()> >, std::allocator<std::pair<m3d::Drawable*, std::function<bool ()> > > >::_M_insert_aux<std::pair<m3d::Drawable*, std::function<bool ()> > >(__gnu_cxx::__normal_iterator<std::pair<m3d::Drawable*, std::function<bool ()> >*, std::vector<std::pair<m3d::Drawable*, std::function<bool ()> >, std::allocator<std::pair<m3d::Drawable*, std::function<bool ()> > > > >, std::pair<m3d::Drawable*, std::function<bool ()> >&&)
0010298c 00000248 W void std::vector<std::pair<m3d::Drawable*, std::function<bool ()> >, std::allocator<std::pair<m3d::Drawable*, std::function<bool ()> > > >::_M_realloc_insert<std::pair<m3d::Drawable*, std::function<bool ()> > >(__gnu_cxx::__normal_iterator<std::pair<m3d::Drawable*, std::function<bool ()> >*, std::vector<std::pair<m3d::Drawable*, std::function<bool ()> >, std::allocator<std::pair<m3d::Drawable*, std::function<bool ()> > > > >, std::pair<m3d::Drawable*, std::function<bool ()> >&&)
00102bd4 000000c8 W std::vector<std::pair<m3d::Drawable*, std::function<bool ()> >, std::allocator<std::pair<m3d::Drawable*, std::function<bool ()> > > >::_M_insert_rval(__gnu_cxx::__normal_iterator<std::pair<m3d::Drawable*, std::function<bool ()> > const*, std::vector<std::pair<m3d::Drawable*, std::function<bool ()> >, std::allocator<std::pair<m3d::Drawable*, std::function<bool ()> > > > >, std::pair<m3d::Drawable*, std::function<bool ()> >&&)
00102c9c 00000098 W void std::vector<std::pair<m3d::Drawable*, std::function<bool ()> >, std::allocator<std::pair<m3d::Drawable*, std::function<bool ()> > > >::emplace_back<std::pair<m3d::Drawable*, std::function<bool ()> > >(std::pair<m3d::Drawable*, std::function<bool ()> >&&)
00102d34 000000a8 W std::_Rb_tree<int, std::pair<int const, std::vector<std::pair<m3d::Drawable*, std::function<bool ()> >, std::allocator<std::pair<m3d::Drawable*, std::function<bool ()> > > > >, std::_Select1st<std::pair<int const, std::vector<std::pair<m3d::Drawable*, std::function<bool ()> >, std::allocator<std::pair<m3d::Drawable*, std::function<bool ()> > > > > >, std::less<int>, std::allocator<std::pair<int const, std::vector<std::pair<m3d::Drawable*, std::function<bool ()> >, std::allocator<std::pair<m3d::Drawable*, std::function<bool ()> > > > > > >::_M_get_insert_unique_pos(int const&)
00102ddc 000001d4 t std::_Rb_tree_iterator<std::pair<int const, std::vector<std::pair<m3d::Drawable*, std::function<bool ()> >, std::allocator<std::pair<m3d::Drawable*, std::function<bool ()> > > > > > std::_Rb_tree<int, std::pair<int const, std::vector<std::pair<m3d::Drawable*, std::function<bool ()> >, std::allocator<std::pair<m3d::Drawable*, std::function<bool ()> > > > >, std::_Select1st<std::pair<int const, std::vector<std::pair<m3d::Drawable*, std::function<bool ()> >, std::allocator<std::pair<m3d::Drawable*, std::function<bool ()> > > > > >, std::less<int>, std::allocator<std::pair<int const, std::vector<std::pair<m3d::Drawable*, std::function<bool ()> >, std::allocator<std::pair<m3d::Drawable*, std::function<bool ()> > > > > > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<int const, std::vector<std::pair<m3d::Drawable*, std::function<bool ()> >, std::allocator<std::pair<m3d::Drawable*, std::function<bool ()> > > > > >, std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) [clone .isra.0]
00102fb0 00000138 W std::pair<std::_Rb_tree_iterator<std::pair<int const, std::vector<std::pair<m3d::Drawable*, std::function<bool ()> >, std::allocator<std::pair<m3d::Drawable*, std::function<bool ()> > > > > >, bool> std::_Rb_tree<int, std::pair<int const, std::vector<std::pair<m3d::Drawable*, std::function<bool ()> >, std::allocator<std::pair<m3d::Drawable*, std::function<bool ()> > > > >, std::_Select1st<std::pair<int const, std::vector<std::pair<m3d::Drawable*, std::function<bool ()> >, std::allocator<std::pair<m3d::Drawable*, std::function<bool ()> > > > > >, std::less<int>, std::allocator<std::pair<int const, std::vector<std::pair<m3d::Drawable*, std::function<bool ()> >, std::allocator<std::pair<m3d::Drawable*, std::function<bool ()> > > > > > >::_M_emplace_unique<std::pair<int, std::vector<std::pair<m3d::Drawable*, std::function<bool ()> >, std::allocator<std::pair<m3d::Drawable*, std::function<bool ()> > > > > >(std::pair<int, std::vector<std::pair<m3d::Drawable*, std::function<bool ()> >, std::allocator<std::pair<m3d::Drawable*, std::function<bool ()> > > > >&&)
001030e8 000006c4 T m3d::Screen::drawTop(m3d::Drawable&, m3d::RenderContext::Mode, int)
001037ac 00000020 T m3d::Camera::Camera()
001037ac 00000020 T m3d::Camera::Camera()
001037cc 00000084 T m3d::Camera::getViewMatrix()
00103850 0000001c T m3d::buttons::buttonPressed(m3d::buttons::Button)
0010386c 00000020 t _GLOBAL__sub_I__ZN3m3d4priv8graphics14defaultCamera0E
0010388c 00000020 W std::vector<int, std::allocator<int> >::~vector()
0010388c 00000020 W std::vector<int, std::allocator<int> >::~vector()
001038ac 00000058 t _GLOBAL__sub_I__ZN3m3d4priv4ndsp12channelMutexE
00103904 00000090 T m3d::LEDPattern::stop()
00103994 00000014 T m3d::Mutex::Mutex()
00103994 00000014 T m3d::Mutex::Mutex()
001039a8 00000014 T m3d::Mutex::~Mutex()
001039a8 00000014 T m3d::Mutex::~Mutex()
001039bc 00000038 T m3d::RenderTarget::RenderTarget(int, int)
001039bc 00000038 T m3d::RenderTarget::RenderTarget(int, int)
001039f4 00000008 T m3d::RenderTarget::getRenderTarget()
001039fc 0000000c T m3d::RenderTarget::clear()
00103a08 00000044 T m3d::RenderContext::RenderContext(int, bool, m3d::RenderContext::Mode, m3d::RenderContext::Stereo3dSide, m3d::RenderContext::ScreenTarget, C3D_Mtx&, C3D_LightEnv_t&, C3D_Light_t&, C3D_LightLut&)
00103a08 00000044 T m3d::RenderContext::RenderContext(int, bool, m3d::RenderContext::Mode, m3d::RenderContext::Stereo3dSide, m3d::RenderContext::ScreenTarget, C3D_Mtx&, C3D_LightEnv_t&, C3D_Light_t&, C3D_LightLut&)
00103a4c 00000330 T C2D_Init
00103d7c 00000044 T C2D_Fini
00103dc0 000000c8 T C2D_Prepare
00103e88 0000010c T C2D_SceneSize
00103f94 0000013c T C2Di_CalcQuad
001040d0 00000030 T C2Di_FlushVtxBuf
00104100 00000020 t C2Di_FrameEndHook
00104120 00000018 T C2D_Flush
00104138 00000030 T C2D_TargetClear
00104168 00000210 T C2Di_Update
00104378 000002ec T C2D_DrawImage
00104664 0000006c T C2D_SpriteSheetLoadFromHandle
001046d0 00000034 T C2D_SpriteSheetLoad
00104704 00000028 T C2D_SpriteSheetGetImage
0010472c 000000ac t C3Di_AptEventHook
001047d8 00000004 W C3Di_GasUpdate
001047dc 000001e0 T C3D_Init
001049bc 00000098 T C3D_SetViewport
00104a54 000004ec T C3Di_UpdateContext
00104f40 000000e0 T C3Di_SplitFrame
00105020 00000044 T C3D_Fini
00105064 00000108 T C3D_BindProgram
0010516c 000000dc T C3Di_LightMtlBlend
00105248 00000090 T C3D_LightInit
001052d8 0000001c T C3D_LightDiffuse
001052f4 0000001c T C3D_LightSpecular0
00105310 0000001c T C3D_LightSpecular1
0010532c 0000005c T C3D_LightPosition
00105388 0000004c t onVBlank0
001053d4 0000004c t onVBlank1
00105420 00000080 t C3Di_RenderTargetDestroy
001054a0 000000ec t onQueueFinish
0010558c 00000060 T C3Di_RenderQueueInit
001055ec 000000b0 T C3Di_RenderQueueExit
0010569c 00000034 T C3Di_RenderQueueWaitDone
001056d0 000000e4 T C3D_FrameBegin
001057b4 00000048 T C3D_FrameDrawOn
001057fc 00000058 T C3D_FrameSplit
00105854 000001bc T C3D_FrameEnd
00105a10 0000001c T C3D_FrameEndHook
00105a2c 00000128 T C3D_RenderTargetCreate
00105b54 0000004c T C3D_RenderTargetSetOutput
00105ba0 000000fc T C3D_SyncTextureCopy
00105c9c 000002a0 T C3D_TexInitWithParams
00105f3c 000000c8 T C3D_TexLoadImage
00106004 00000044 T C3D_TexBind
00106048 00000074 T C3D_TexDelete
001060bc 0000016c T C3Di_SetTex
00106228 000000b8 T FogLut_FromArray
001062e0 000000b8 T FogLut_Exp
00106398 00000058 T C3D_FogGasMode
001063f0 00000020 T C3D_FogColor
00106410 00000030 T C3D_FogLutBind
00106440 000003f4 t Tex3DSi_ImportCommon
00106834 00000038 T Tex3DS_TextureImportStdio
0010686c 0000001c T Tex3DS_GetSubTexture
00106888 0000001c T C3D_CalcColorBufSize
001068a4 0000001c T C3D_CalcDepthBufSize
001068c0 00000044 T C3D_SetFrameBuf
00106904 0000016c T C3Di_FrameBufBind
00106a70 000000cc T C3D_FrameBufClear
00106b3c 00000044 T C3D_FrameBufTransfer
00106b80 000003d8 T C3Di_LightEnvUpdate
00106f58 0000009c T C3Di_LightEnvDirty
00106ff4 0000005c T C3D_LightEnvInit
00107050 0000002c T C3D_LightEnvBind
0010707c 000000b8 T C3D_LightEnvLut
00107134 00000034 T C3D_GetTexEnv
00107168 00000024 T C3Di_TexEnvBind
0010718c 00000070 T C3D_ProcTexInit
001071fc 00000054 T C3D_ProcTexBind
00107250 0000005c T C3D_ProcTexLutBind
001072ac 000000a4 T ProcTexLut_FromArray
00107350 0000017c T C3Di_ProcTexUpdate
001074cc 00000068 T C3Di_ProcTexDirty
00107534 0000029c T C3D_UpdateUniforms
001077d0 000000c0 T C3Di_DirtyUniforms
00107890 000000d8 T C3Di_LoadShaderUniforms
00107968 00000028 T C3Di_ClearShaderUniforms
00107990 00000024 T BufInfo_Init
001079b4 00000080 T BufInfo_Add
00107a34 00000040 T C3D_SetBufInfo
00107a74 00000048 T C3Di_BufInfoBind
00107abc 00000148 T C3D_DrawArrays
00107c04 00000040 T C3D_DepthMap
00107c44 0000001c T C3D_CullFace
00107c60 00000040 T C3D_StencilTest
00107ca0 00000024 T C3D_StencilOp
00107cc4 0000001c T C3D_BlendingColor
00107ce0 00000024 T C3D_EarlyDepthTest
00107d04 0000002c T C3D_DepthTest
00107d30 0000002c T C3D_AlphaTest
00107d5c 00000050 T C3D_AlphaBlend
00107dac 00000030 T C3D_FragOpMode
00107ddc 00000044 T C3D_FragOpShadow
00107e20 000001ac T C3Di_EffectBind
00107fcc 00000028 T AttrInfo_Init
00107ff4 00000098 T AttrInfo_AddLoader
0010808c 00000054 T C3D_SetAttrInfo
001080e0 00000080 T C3Di_AttrInfoBind
00108160 000000a8 T C3D_ImmSendAttrib
00108208 000000a8 T LightLut_FromArray
001082b0 000000d8 T LightLut_FromFunc
00108388 000000cc T Mtx_Ortho
00108454 000000a4 T Mtx_RotateX
001084f8 000000b8 T Mtx_PerspStereoTilt
001085b0 000000cc T Mtx_OrthoTilt
0010867c 000000a0 T Mtx_Translate
0010871c 000000a0 T Mtx_RotateZ
001087bc 000000a0 T Mtx_RotateY
0010885c 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
00108880 00000004 t addrMapNodeDestructor(rbtree_node*)
00108884 00000114 T vramMemAlign
00108998 00000008 T vramAlloc
001089a0 0000005c T vramFree
001089fc 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
00108a20 00000004 t addrMapNodeDestructor(rbtree_node*)
00108a24 00000120 T linearMemAlign
00108b44 00000008 T linearAlloc
00108b4c 0000005c T linearFree
00108ba8 00000084 T MemPool::CoalesceRight(MemBlock*)
00108c2c 00000170 T MemPool::Allocate(MemChunk&, unsigned long, int)
00108d9c 000000fc T MemPool::Deallocate(MemChunk const&)
00108e98 00000008 t romfs_close
00108ea0 000000c8 t romfs_seek
00108f68 00000024 t romfs_dirreset
00108f8c 0000007c t romfs_fstat
00109008 0000007c t romfs_free
00109084 0000025c t romfs_dirnext
001092e0 000000b8 t searchForFile.constprop.0
00109398 000000bc t searchForDir.constprop.0
00109454 000001c4 t navigateToDir.constprop.0
00109618 00000128 t romfs_open
00109740 00000054 t romfs_chdir
00109794 00000078 t romfs_diropen
0010980c 00000200 t romfs_stat
00109a0c 000000c0 t romfsInitMtime.isra.0
00109acc 00000008 t romfs_dirclose
00109ad4 000000d4 t romfs_read
00109ba8 0000020c t romfsMountCommon
00109db4 00000358 T romfsMount
0010a10c 00000078 T romfsUnmount
0010a184 0000000c T __sync_init
0010a190 00000018 T __sync_fini
0010a1a8 00000010 T __sync_get_arbiter
0010a1b8 0000001c T LightLock_Init
0010a1d4 00000090 T LightLock_Lock
0010a264 00000034 T LightLock_TryLock
0010a298 0000005c T LightLock_Unlock
0010a2f4 00000024 T RecursiveLock_Init
0010a318 00000030 T RecursiveLock_Lock
0010a348 0000005c T RecursiveLock_TryLock
0010a3a8 00000074 T RecursiveLock_Unlock
0010a41c 00000040 T LightEvent_Init
0010a460 000000b4 T LightEvent_Clear
0010a518 000000ec T LightEvent_Signal
0010a608 000000c4 T LightEvent_Wait
0010a6cc 00000058 t getSysTime
0010a724 0000004c T osConvertVirtToPhys
0010a770 00000024 T osGetMemRegionUsed
0010a798 00000128 T __libctru_gtod
0010a8c0 00000034 T __ctru_speedup_config
0010a8f4 00000038 T osSetSpeedupEnable
0010a92c 0000012c T srvInit
0010aa58 00000058 T srvExit
0010aab0 00000080 T srvGetServiceHandleDirect
0010ab30 00000048 T srvGetServiceHandle
0010ab78 00000038 T srvPublishToSubscriber
0010abb0 00000014 t archive_link
0010abc4 00000014 t archive_dirreset
0010abd8 00000014 t archive_chmod
0010abec 00000024 t error_cmp
0010ac10 00000050 t archive_translate_error
0010ac60 000000d4 t archive_seek
0010ad34 0000007c t _archiveInit.part.0
0010adb0 0000008c t archiveFindDevice.part.0
0010ae3c 00000230 t archive_utf16path
0010b06c 000000a0 t _archiveUnmountDeviceStruct.part.0
0010b10c 00000014 t archive_fchmod
0010b120 00000014 t archive_statvfs
0010b134 0000015c t _archiveMountDevice
0010b290 000000e8 t archive_diropen
0010b378 000000a4 t archive_fstat
0010b41c 0000006c t archive_close
0010b488 0000006c t archive_fsync
0010b4f4 00000070 t archive_dirclose
0010b564 000000e8 t sdmc_statvfs
0010b64c 00000080 t archive_ftruncate
0010b6cc 000000f8 t archive_chdir
0010b7c4 000000b0 t archive_read
0010b874 000000ac t archive_unlink
0010b920 000000c8 t archive_rmdir
0010b9e8 000000ec t archive_mkdir
0010bad4 000001a8 t archive_stat
0010bc7c 00000190 t archive_rename
0010be0c 00000168 t archive_dirnext
0010bf74 0000012c t archive_write
0010c0a0 000001f0 t archive_open
0010c290 00000168 T archiveMountSdmc
0010c3f8 00000054 T archiveUnmountAll
0010c44c 00000808 t gfxGxHwInit
0010cc54 00000084 t gfxSetFramebufferInfo.part.0
0010ccd8 00000010 T gfxSet3D
0010cce8 00000018 T __get_bytes_per_pixel
0010cd00 00000184 T gfxSetScreenFormat
0010ce84 00000274 T gfxInit
0010d0f8 00000010 T gfxInitDefault
0010d108 000000e0 T gfxExit
0010d1e8 000000a8 T gfxGetFramebuffer
0010d290 0000016c T gfxConfigScreen
0010d3fc 000001e0 T shaderInstanceInit
0010d5dc 00000018 T shaderInstanceGetUniformLocation
0010d5f4 0000001c T shaderProgramInit
0010d610 00000064 T shaderProgramFree
0010d674 00000080 T shaderProgramSetVsh
0010d6f4 000008c0 T shaderProgramConfigure
0010dfb4 000001f8 t DVLE_GenerateOutmap.part.0
0010e1ac 000001cc T DVLB_ParseFile
0010e378 00000038 T DVLB_Free
0010e3b0 00000074 T DVLE_GetUniformRegister
0010e424 00000010 T GX_BindQueue
0010e434 00000084 T GX_ProcessCommandList
0010e4b8 00000080 T GX_MemoryFill
0010e538 0000007c T GX_DisplayTransfer
0010e5b4 00000080 T GX_TextureCopy
0010e634 00000074 t gxCmdQueueDoCommands.part.0
0010e6a8 000000c8 T gxCmdQueueInterrupt
0010e770 0000004c T gxCmdQueueClear
0010e7bc 000000f8 T gxCmdQueueAdd
0010e8b4 00000080 T gxCmdQueueRun
0010e934 00000060 T gxCmdQueueStop
0010e994 00000074 T gxCmdQueueWait
0010ea08 0000013c T GPUCMD_Add
0010eb44 000000ac T GPUCMD_Split
0010ebf0 00000040 T f32tof16
0010ec30 00000040 T f32tof24
0010ec70 00000044 T f32tof31
0010ecb4 00000150 t ndspUpdateMaster
0010ee04 000000ec t ndspFinalize
0010eef0 00000270 t ndspInitialize
0010f160 00000074 t ndspAptHook
0010f1d4 00000168 t ndspSync
0010f33c 00000104 t ndspThreadMain
0010f440 0000039c T ndspInit
0010f7dc 000000fc T ndspExit
0010f8d8 00000084 T ndspChnReset
0010f95c 00000034 T ndspiInitChn
0010f990 0000002c T ndspiDirtyChn
0010f9bc 00000480 T ndspiUpdateChn
0010fe3c 000001cc T ndspiReadChnState
00110008 00000074 T gspInit
0011007c 0000003c T gspExit
001100b8 00000030 T gspSetEventCallback
001100e8 000000a0 T gspInitEventHandler
00110188 00000040 T gspExitEventHandler
001101c8 00000050 T gspWaitForEvent
00110218 00000064 T gspWaitForAnyEvent
00110280 0000017c t gspEventThreadMain
001103fc 00000114 T gspSubmitGxCommand
00110510 00000068 T GSPGPU_WriteHWRegs
00110578 00000084 T GSPGPU_WriteHWRegsWithMask
001105fc 00000070 T GSPGPU_SetBufferSwap
0011066c 00000050 T GSPGPU_FlushDataCache
001106bc 00000034 T GSPGPU_SetLcdForceBlack
001106f0 00000064 T GSPGPU_RegisterInterruptRelayQueue
00110754 0000002c T GSPGPU_UnregisterInterruptRelayQueue
00110780 00000048 T GSPGPU_AcquireRight
001107c8 0000002c T GSPGPU_ReleaseRight
001107f4 0000007c T GSPGPU_ImportDisplayCaptureInfo
00110870 0000002c T GSPGPU_SaveVramSysArea
0011089c 0000002c T GSPGPU_RestoreVramSysArea
001108c8 0000008c T acInit
00110954 0000003c T acExit
00110990 000000a4 T cfguInit
00110a34 0000003c T cfguExit
00110a70 0000004c T CFGU_GetConfigInfoBlk2
00110abc 00000094 T dspInit
00110b50 0000003c T dspExit
00110b8c 00000034 T DSP_SetSemaphore
00110bc0 00000034 T DSP_SetSemaphoreMask
00110bf4 00000038 T DSP_GetSemaphoreHandle
00110c2c 00000064 T DSP_LoadComponent
00110c90 0000002c T DSP_UnloadComponent
00110cbc 00000044 T DSP_RegisterInterruptEvents
00110d00 00000074 T DSP_ReadPipeIfPossible
00110d74 0000004c T DSP_WriteProcessPipe
00110dc0 00000040 T DSP_ConvertProcessAddressFromDspDram
00110e00 00000040 T DSP_RecvData
00110e40 0000004c T DSP_RecvDataIsReady
00110e8c 000000c8 T fsInit
00110f54 0000003c T fsExit
00110f90 00000060 T fsExemptFromSession
00110ff0 00000050 T fsUnexemptFromSession
00111040 000000cc T FSUSER_OpenFile
0011110c 000000d4 T FSUSER_OpenFileDirectly
001111e0 000000bc T FSUSER_DeleteFile
0011129c 000000f8 T FSUSER_RenameFile
00111394 000000bc T FSUSER_DeleteDirectory
00111450 000000d4 T FSUSER_CreateFile
00111524 000000c4 T FSUSER_CreateDirectory
001115e8 000000f8 T FSUSER_RenameDirectory
001116e0 000000b4 T FSUSER_OpenDirectory
00111794 00000094 T FSUSER_OpenArchive
00111828 000000b4 T FSUSER_ControlArchive
001118dc 0000008c T FSUSER_CloseArchive
00111968 00000074 T FSUSER_GetSdmcArchiveResource
001119dc 00000064 T FSUSER_IsSdmcWritable
00111a40 00000058 T FSFILE_Read
00111a98 00000060 T FSFILE_Write
00111af8 00000038 T FSFILE_GetSize
00111b30 00000028 T FSFILE_SetSize
00111b58 0000003c T FSFILE_Close
00111b94 00000024 T FSFILE_Flush
00111bb8 00000050 T FSDIR_Read
00111c08 0000003c T FSDIR_Close
00111c44 00000004 W _aptDebug
00111c48 00000178 T aptSendCommand
00111dc0 000001a8 t aptEventHandler
00111f68 000000e8 t aptClearParamQueue
00112050 00000030 T aptHook
00112080 00000030 T aptUnhook
001120b0 00000084 T APT_SleepIfShellClosed
00112134 00000084 T aptSetSleepAllowed
001121b8 00000084 T APT_UnlockTransition
0011223c 000000c8 T APT_ReceiveParameter
00112304 000000bc t aptReceiveParameter.constprop.0
001123c0 000001d8 t aptScreenTransfer
00112598 0000021c t aptWaitForWakeUp.isra.0
001127b4 0000024c T aptMainLoop
00112a00 000002b0 T aptExit
00112cb0 000002b4 T aptInit
00112f64 00000048 T APT_CloseApplication
00112fac 00000018 t aptExitProcess
00112fc4 0000007c T APT_CheckNew3DS
00113040 00000074 T ptmuInit
001130b4 0000003c T ptmuExit
001130f0 000001d4 T hidInit
001132c4 000000d0 T hidExit
00113394 0000023c T hidScanInput
001135d0 00000010 T hidKeysDown
001135e0 0000000c T srvPmGetSessionHandle
001135ec 00000074 T ptmSysmInit
00113660 0000003c T ptmSysmExit
0011369c 00000034 T PTMSYSM_ConfigureNew3DSCPU
001136d0 000000cc t buffer_read
0011379c 000000d8 t iov_read
00113874 00000120 t iov_memmove
00113994 000001c8 t decompress_rle
00113b5c 00000258 t decompress_lzss
00113db4 000002ec t decompress_huff.part.0
001140a0 00000440 t decompress_lz11
001144e0 00000010 T decompressCallback_Stdio
001144f0 000000e4 T decompressHeader
001145d4 00000250 T decompressV
00114824 00000010 T rbtree_init
00114834 000001a0 t do_insert
001149d4 00000008 T rbtree_insert
001149dc 00000090 T rbtree_rotate
00114a6c 00000338 T rbtree_remove
00114da4 00000074 T rbtree_find
00114e18 000000c0 T utf8_to_utf16
00114ed8 0000013c T decode_utf8
00115014 000000e8 T utf16_to_utf8
001150fc 00000038 W __libctru_init
00115134 00000030 t __libctru_nanosleep
00115164 00000030 t __ctru_get_reent
00115194 000000f8 W __system_initSyscalls
0011528c 00000128 W __system_allocateHeaps
001153b4 000000f0 W __system_initArgv
001154a4 T svcControlMemory
001154c4 T svcExitProcess
001154cc T svcCreateThread
001154ec T svcExitThread
001154f4 T svcSleepThread
001154fc T svcReleaseMutex
00115504 T svcCreateEvent
00115518 T svcSignalEvent
00115520 T svcClearEvent
00115528 T svcMapMemoryBlock
00115530 T svcUnmapMemoryBlock
00115538 T svcCreateAddressArbiter
0011554c T svcArbitrateAddress
00115564 T svcCloseHandle
0011556c T svcWaitSynchronization
00115574 T svcWaitSynchronizationN
0011559c T svcDuplicateHandle
001155b0 T svcGetSystemTick
001155b8 T svcGetSystemInfo
001155d0 T svcConnectToPort
001155e4 T svcSendSyncRequest
001155ec T svcBreak
001155f4 W initSystem
00115644 W __ctru_exit
0011565c T __aeabi_read_tp
00115668 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
0011568c 00000004 t addrMapNodeDestructor(rbtree_node*)
00115690 000000e8 T mappableAlloc
00115778 0000005c T mappableFree
001157d4 00000084 W envGetHandle
00115858 00000050 W envDestroyHandles
001158a8 00000188 T threadCreate
00115a30 0000002c T threadFree
00115a5c 00000024 T threadJoin
00115a80 00000030 T threadGetCurrent
00115ab0 00000040 T threadExit
00115af0 00000044 t _thread_begin
00115b34 00000174 T irrstInit
00115ca8 000000c0 T irrstExit
00115d68 000000b0 T irrstScanInput
00115e18 00000024 T irrstKeysHeld
00115e3c 00000050 T rbtree_node_next
00115e8c 00000060 T encode_utf16
00115eec 000000fc T encode_utf8
00115fe8 00000064 T decode_utf16
0011604c 0000001c W __appInit
00116068 0000001c W __appExit
00116084 000000a0 W __libctru_exit
00116124 00000010 T __aeabi_atexit
00116134 00000004 T operator delete(void*)
00116138 0000005c T operator new(unsigned int)
00116194 0000005c T std::_Rb_tree_increment(std::_Rb_tree_node_base*)
001161f0 00000070 T std::_Rb_tree_decrement(std::_Rb_tree_node_base*)
00116260 000002a4 T std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)
00116504 0000002c T std::__throw_bad_alloc()
00116530 00000048 T std::__throw_logic_error(char const*)
00116578 00000048 T std::__throw_length_error(char const*)
001165c0 0000000c T std::bad_function_call::what() const
001165cc 00000020 T std::bad_function_call::~bad_function_call()
001165cc 00000020 T std::bad_function_call::~bad_function_call()
001165ec 00000028 T std::bad_function_call::~bad_function_call()
00116614 0000002c T std::__throw_bad_function_call()
00116640 00000058 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int)
00116698 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char const*, char const*)
001166bc 000000bc W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00116778 0000000c T std::bad_alloc::what() const
00116784 00000020 T std::bad_alloc::~bad_alloc()
00116784 00000020 T std::bad_alloc::~bad_alloc()
001167a4 0000002c T std::bad_alloc::~bad_alloc()
001167d0 00000004 T operator delete(void*, unsigned int)
001167d4 000000d0 t (anonymous namespace)::pool::free(void*) [clone .constprop.0]
001168a4 0000009c t (anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.0]
00116940 00000044 T __cxa_allocate_exception
00116984 00000030 T __cxa_free_exception
001169b4 00000040 t _GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv
001169f4 T __cxa_end_cleanup
00116a04 00000138 T __cxa_type_match
00116b3c 000000b4 T __cxa_begin_cleanup
00116bf0 000000b4 T __gnu_end_cleanup
00116ca4 000000cc T __cxa_begin_catch
00116d70 000000e0 T __cxa_end_catch
00116e50 00000004 T std::exception::~exception()
00116e50 00000004 T std::exception::~exception()
00116e54 00000004 T std::bad_exception::~bad_exception()
00116e54 00000004 T std::bad_exception::~bad_exception()
00116e58 0000000c T transaction clone for std::bad_exception::what() const
00116e58 0000000c T std::bad_exception::what() const
00116e64 00000018 T std::bad_exception::~bad_exception()
00116e7c 0000000c T __cxa_get_globals_fast
00116e88 0000000c T __cxa_get_globals
00116e94 00000168 t read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)
00116ffc 00000064 t base_of_encoded_value(unsigned char, _Unwind_Context*)
00117060 000000d8 t parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)
00117138 000006f8 T __gxx_personality_v0
00117830 00000038 T __cxxabiv1::__terminate(void (*)())
00117868 00000018 T std::terminate()
00117880 0000000c T __cxxabiv1::__unexpected(void (*)())
0011788c 00000018 T std::unexpected()
001178a4 00000014 T std::get_terminate()
001178b8 00000014 T std::get_unexpected()
001178cc 00000070 t __gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)
0011793c 00000070 T __cxa_init_primary_exception
001179ac 00000058 T __cxa_throw
00117a04 000000b0 T __cxa_rethrow
00117ab4 00000014 T std::get_new_handler()
00117ac8 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
00117ac8 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
00117ae8 0000002c T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
00117b14 0000006c T __cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
00117b80 000000dc T __cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
00117c5c 00000044 T __cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
00117ca0 00000004 T std::type_info::~type_info()
00117ca0 00000004 T std::type_info::~type_info()
00117ca4 00000008 T std::type_info::__is_pointer_p() const
00117ca4 00000008 T std::type_info::__is_function_p() const
00117cac 0000004c T std::type_info::operator==(std::type_info const&) const
00117cf8 00000008 T std::logic_error::what() const
00117cf8 00000008 T std::runtime_error::what() const
00117d00 00000064 T std::logic_error::~logic_error()
00117d00 00000064 T std::logic_error::~logic_error()
00117d64 00000064 T std::length_error::~length_error()
00117d64 00000064 T std::length_error::~length_error()
00117dc8 0000006c T std::logic_error::~logic_error()
00117e34 0000006c T std::length_error::~length_error()
00117ea0 00000038 T std::logic_error::logic_error(char const*)
00117ea0 00000038 T std::logic_error::logic_error(char const*)
00117ed8 00000044 T std::length_error::length_error(char const*)
00117ed8 00000044 T std::length_error::length_error(char const*)
00117f1c 00000088 W std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)
00117fa4 00000004 W std::string::_Rep::_M_destroy(std::allocator<char> const&)
00117fa8 000000a4 W char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag)
0011804c 0000004c W std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)
0011804c 0000004c W std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)
00118098 0000005c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
001180f4 00000014 T __cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
00118108 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
00118108 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
00118128 0000002c T __cxxabiv1::__class_type_info::~__class_type_info()
00118154 00000068 T __cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
001181bc 0000002c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
001181e8 00000044 T __cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const
0011822c 00000070 t __cxxabiv1::__is_gxx_exception_class(char*)
0011829c 0000002c T __cxa_call_terminate
001182c8 00000154 T __cxa_call_unexpected
00118420 0000022c T cosf
0011864c 00000024 t with_errnof
00118670 00000018 t xflowf
00118688 0000000c T __math_uflowf
00118694 0000000c T __math_may_uflowf
001186a0 0000000c T __math_oflowf
001186ac 00000030 T __math_divzerof
001186dc 0000001c T __math_invalidf
001186f8 00000120 T expf
00118818 000003ec T powf
00118c04 00000070 T tanf
00118c78 00000274 T sinf
00118eec 000002f0 T __ieee754_rem_pio2f
001191dc 00000868 T __kernel_rem_pio2f
00119a44 00000208 T __kernel_tanf
00119c4c 00000010 T fabsf
00119c5c 000000b4 T floorf
00119d10 00000154 T scalbnf
00119e64 00000038 T __aeabi_d2lz
00119e64 00000038 T __fixdfdi
00119ea0 00000040 T __aeabi_d2ulz
00119ea0 00000040 T __fixunsdfdi
00119ee0 00000120 T __udivmoddi4
0011a000 00000018 t selfrel_offset31
0011a018 00000090 t search_EIT_table
0011a0a8 00000040 t __gnu_unwind_get_pr_addr
0011a0e8 00000118 t get_eit_entry
0011a200 00000088 t restore_non_core_regs
0011a288 00000014 t _Unwind_decode_typeinfo_ptr.constprop.0
0011a29c 00000004 t _Unwind_DebugHook
0011a2a0 00000064 t unwind_phase2
0011a304 00000134 t unwind_phase2_forced
0011a438 000000a4 T __gnu_Unwind_RaiseException
0011a4dc 00000028 T __gnu_Unwind_ForcedUnwind
0011a504 00000074 T __gnu_Unwind_Resume
0011a578 00000020 T __gnu_Unwind_Resume_or_Rethrow
0011a598 00000004 T _Unwind_Complete
0011a59c 00000018 T _Unwind_DeleteException
0011a5b4 0000005c T _Unwind_VRS_Get
0011a610 0000002c t _Unwind_GetGR
0011a63c 0000005c T _Unwind_VRS_Set
0011a698 0000002c t _Unwind_SetGR
0011a6c4 000000c0 T __gnu_Unwind_Backtrace
0011a784 00000420 t __gnu_unwind_pr_common
0011aba4 00000008 T __aeabi_unwind_cpp_pr0
0011abac 00000008 W __aeabi_unwind_cpp_pr1
0011abb4 00000008 W __aeabi_unwind_cpp_pr2
0011abbc 000003d8 T _Unwind_VRS_Pop
0011af94 00000064 t next_unwind_byte
0011aff8 0000002c t _Unwind_GetGR.constprop.0
0011b024 00000004 t unwind_UCB_from_context
0011b028 00000424 T __gnu_unwind_execute
0011b44c 00000048 T __gnu_unwind_frame
0011b494 00000010 T _Unwind_GetRegionStart
0011b4a4 0000001c T _Unwind_GetLanguageSpecificData
0011b4c0 00000008 T _Unwind_GetDataRelBase
0011b4c8 00000008 T _Unwind_GetTextRelBase
0011b4d0 00000014 T abort
0011b4e4 00000078 T bsearch
0011b55c 00000028 T calloc
0011b584 00000094 T _calloc_r
0011b618 00000024 T __cxa_atexit
0011b63c 0000000c T __errno
0011b648 00000034 T exit
0011b67c 00000160 T _fclose_r
0011b7dc 00000020 T fclose
0011b7fc 00000258 T __sflush_r
0011ba54 00000094 T _fflush_r
0011bae8 00000038 T fflush
0011bb20 0000000c T _cleanup_r
0011bb2c 00000184 T __sinit
0011bcb0 00000134 T __sfp
0011bde4 0000000c T __sfp_lock_acquire
0011bdf0 0000000c T __sfp_lock_release
0011bdfc 0000003c T __libc_fini_array
0011be38 00000140 T _fopen_r
0011bf78 00000028 T fopen
0011bfa0 000002d0 T _fread_r
0011c270 00000038 T fread
0011c2a8 000000f8 T _malloc_trim_r
0011c3a0 000002e4 T _free_r
0011c684 0000001c T _fseek_r
0011c6a0 000004f8 T _fseeko_r
0011cb98 000001bc T _ftello_r
0011cd54 00000068 T _fwalk
0011cdbc 00000070 T _fwalk_reent
0011ce2c 0000007c T __libc_init_array
0011cea8 00000138 T __smakebuf_r
0011cfe0 00000028 T memalign
0011d008 00000148 T _memalign_r
0011d150 00000020 T malloc
0011d170 00000020 T free
0011d190 000007f0 T _malloc_r
0011d980 000000e0 T memchr
0011da60 000000a8 T memcmp
0011db08 0000011c T memcpy
0011dc24 00000154 T memmove
0011dd78 00000118 T memset
0011de90 0000000c T __malloc_lock
0011de9c 0000000c T __malloc_unlock
0011dea8 000000e0 T _puts_r
0011df88 00000020 T puts
0011dfa8 0000001c t lflush
0011dfc4 000001ac T __srefill_r
0011e170 00000098 T _raise_r
0011e208 00000020 T raise
0011e228 00000044 T __sread
0011e26c 00000068 T __swrite
0011e2d4 00000048 T __sseek
0011e31c 00000008 T __sclose
0011e324 00000144 T strchr
0011e468 0000005c T strlen
0011e4c4 000000ec T strncat
0011e5b0 000000dc T strncmp
0011e68c 000000c0 T strncpy
0011e74c 00000048 T strnlen
0011e794 0000003c T time
0011e7d0 00000154 T __swsetup_r
0011e924 000000b0 T __register_exitproc
0011e9d4 00000114 T __call_exitprocs
0011eae8 000000c8 T __sflags
0011ebb0 000004a4 T __sfvwrite_r
0011f054 00000598 T _realloc_r
0011f5ec 00000008 t null_write
0011f5f4 00000018 T setDefaultDevice
0011f60c 000000c8 T FindDevice
0011f6d4 00000028 T RemoveDevice
0011f6fc 0000009c T AddDevice
0011f798 00000020 T GetDeviceOpTab
0011f7b8 00000078 T _fstat_r
0011f830 00000014 T _getpid_r
0011f844 00000038 T _gettimeofday_r
0011f87c 00000008 T _isatty_r
0011f884 00000014 T _kill_r
0011f898 00000084 T _lseek_r
0011f91c 000000c8 T _open_r
0011f9e4 00000080 T _read_r
0011fa64 00000078 T _sbrk_r
0011fadc 00000080 T _write_r
0011fb5c 00000024 T _exit
0011fb80 000001b8 T _concatenate_path
0011fd38 00000160 T chdir
0011fe98 00000008 T __flockfile
0011fea0 00000008 T __funlockfile
0011fea8 00000018 T __libc_lock_acquire
0011fec0 00000018 T __libc_lock_release
0011fed8 00000018 T __libc_lock_init_recursive
0011fef0 00000018 T __libc_lock_acquire_recursive
0011ff08 00000018 T __libc_lock_release_recursive
0011ff20 00000018 T __libc_lock_close_recursive
0011ff38 0000008c T __release_handle
0011ffc4 000000b4 T __alloc_handle
00120078 0000003c T __get_handle
001200b4 000000f4 T _close_r
001201a8 00000028 T __getreent
001201d0 00000044 T strrchr
00120214 T _fini
00121000 R render3d_shbin
001211d4 R render3d_shbin_end
001211d4 R render3d_shbin_size
001211d8 R render2d_shbin
00121364 R render2d_shbin_end
00121364 R render2d_shbin_size
00121398 r .LC0
001213f4 0000000c R vtable for m3d::Sprite
0012144c 00000038 r CSWTCH.18
00121484 00000005 r colorFmtSizes
0012148c 00000004 r depthFmtSizes
00121490 00000008 r ids.0
00121498 00000007 r layer_enabled.1
001214a0 00000006 r lutIds.2
001214a8 00000010 r CSWTCH.9
00121510 00000070 r archive_devoptab
00121580 00000030 r error_table
001215b0 00000014 r CSWTCH.66
001215c4 00000008 r framebufferInfoSt
001215d4 00000011 r dsp_filename.0
00121684 0000000c R typeinfo for std::bad_function_call
00121690 00000016 R typeinfo name for std::bad_function_call
001216a8 00000014 R vtable for std::bad_function_call
001216e4 0000000c R typeinfo for std::bad_alloc
001216f0 0000000d R typeinfo name for std::bad_alloc
00121700 00000014 R vtable for std::bad_alloc
00121728 00000008 R typeinfo for __cxxabiv1::__forced_unwind
00121730 00000008 R typeinfo for __cxxabiv1::__foreign_exception
00121738 0000000c R typeinfo for std::bad_exception
00121744 00000008 R typeinfo for std::exception
0012174c 00000020 R typeinfo name for __cxxabiv1::__forced_unwind
0012176c 00000024 R typeinfo name for __cxxabiv1::__foreign_exception
00121790 00000012 R typeinfo name for std::bad_exception
001217a4 0000000d R typeinfo name for std::exception
001217b4 00000014 R vtable for std::bad_exception
001217c8 0000000c R typeinfo for __cxxabiv1::__si_class_type_info
001217d4 00000025 R typeinfo name for __cxxabiv1::__si_class_type_info
001217fc 0000002c R vtable for __cxxabiv1::__si_class_type_info
00121828 00000008 R typeinfo for std::type_info
00121830 0000000d R typeinfo name for std::type_info
00121840 0000000c R typeinfo for std::logic_error
0012184c 0000000c R typeinfo for std::length_error
00121858 00000010 R typeinfo name for std::logic_error
00121868 00000011 R typeinfo name for std::length_error
0012187c 00000014 R vtable for std::logic_error
00121890 00000014 R vtable for std::length_error
001218e8 0000000c R typeinfo for __cxxabiv1::__class_type_info
001218f4 00000022 R typeinfo name for __cxxabiv1::__class_type_info
00121918 0000002c R vtable for __cxxabiv1::__class_type_info
00121944 00000060 R __inv_pio4
001219a8 000000e0 R __sincosf_table
00121a88 00000080 r npio2_hw
00121b08 00000318 r two_over_pi
00121e20 0000002c r PIo2
00121e4c 0000000c r init_jk
00121e58 00000148 R __exp2f_data
00121fa0 00000128 R __powf_log2_data
001220c8 00000004 R _global_impure_ptr
001220d0 00000101 R _ctype_
001221d4 00000070 R dotab_stdnull
00122244 r 
00122310 R __exidx_start
001224f0 R __exidx_end
00123000 W __stacksize__
00123004 D __dso_handle
00123008 00000004 d framerate
0012300c 00000008 d framerateCounter
00123014 00000070 d romFS_devoptab
00123084 00000001 d botFormat
00123088 00000008 d doubleBuf
00123090 00000001 d topFormat
00123094 00000004 d queueLock
00123098 00000004 d gspLastEvent
0012309c 00000004 d aptFlags
001230a0 00000001 d aptHomeAllowed
001230a4 00000004 D __cxxabiv1::__unexpected_handler
001230a8 00000004 D __cxxabiv1::__terminate_handler
001230ac 0000000c d __sfp_recursive_mutex
001230b8 0000000c d __sinit_recursive_mutex
001230c4 00000004 D _impure_ptr
001230c8 00000460 d impure_data
00123528 00000408 D __malloc_av_
00123930 00000004 D __malloc_sbrk_base
00123934 00000004 D __malloc_trim_threshold
00123938 0000000c d __malloc_recursive_mutex
00123944 0000000c D __atexit_recursive_mutex
00123950 00000004 d defaultDevice
00123954 0000008c D devoptab_list
001239e0 00000400 d _current_working_directory
00123de0 00000004 d __hndl_lock
00123de4 0000000c d __stderr_handle
00123df0 0000000c d __stdin_handle
00123dfc 0000000c d __stdout_handle
00123e08 00001000 d handles
00124e08 t __frame_dummy_init_array_entry
00124e08 T __init_array_start
00124e08 B __preinit_array_end
00124e08 B __preinit_array_start
00124e08 D __tdata_lma
00124e08 D __tdata_lma_end
00124e08 D __TMC_END__
00124e08 d __TMC_LIST__
00124e18 t __do_global_dtors_aux_fini_array_entry
00124e18 T __fini_array_start
00124e18 T __init_array_end
00124e1c T __bss_start__
00124e1c T __fini_array_end
00124e1c b saved_stack
00124e24 b completed.1
00124e28 b object.0
00124e40 00000058 B m3d::priv::graphics::defaultCamera0
00124e98 00000058 B m3d::priv::graphics::defaultCamera1
00124ef0 00000004 B m3d::priv::core::ptmsysmHandle
00124ef4 00000001 B m3d::priv::core::ledPatternRunning
00124ef5 00000001 B m3d::priv::ndsp::initialized
00124ef8 0000000c B m3d::priv::ndsp::channelMutex
00124f04 0000000c B m3d::priv::ndsp::occupiedChannels
00124f10 00000040 b s_projBot
00124f50 00000040 b s_projTop
00124f90 00000004 b uLoc_mdlvMtx
00124f94 00000004 b uLoc_projMtx
00124f98 000002d0 B __C3D_Context
00125268 0000000c b hookCookie
00125278 00000010 b cpuTime
00125288 00000004 b firstTarget
0012528c 00000008 b frameCounter
00125294 00000004 b frameEndCb
00125298 00000004 b frameEndCbData
001252a0 00000010 b gpuTime
001252b0 00000001 b inFrame
001252b1 00000001 b inSafeTransfer
001252b4 00000004 b lastTarget
001252b8 0000000c b linkedTarget
001252c4 00000001 b measureGpuTime
001252c5 00000001 b needSwapBot
001252c6 00000001 b needSwapTop
001252c8 00000004 B C3D_BoolUnifs
001252cc 00000002 B C3D_BoolUnifsDirty
001252d0 00000c00 B C3D_FVUnif
00125ed0 000000c0 B C3D_FVUnifDirty
00125f90 00000020 B C3D_IVUnif
00125fb0 00000008 B C3D_IVUnifDirty
00125fb8 000000c0 b C3Di_FVUnifEverDirty
00126078 00000008 b C3Di_IVUnifEverDirty
00126080 00000018 b C3Di_ShaderFVecData
00126098 0000000c b sAddrMap
001260a4 00000008 b sVramPool
001260ac 00000008 b sLinearPool
001260b4 0000000c b sAddrMap
001260c0 00000401 b __component
001264c4 00000004 V __romfs_path
001264c8 00000802 b __utf16path
00126ccc 00000004 b romfs_mount_list
00126cd0 00000004 b arbiter
00126cd4 00000001 V __ctru_speedup
00126cd8 00000004 b srvHandle
00126cdc 00000004 b srvRefCount
00126ce0 00000004 b archive_device_cwd
00126ce8 00001500 b archive_devices
001281e8 00000001 b archive_initialized
001281ec 0000001c B bottomFramebufferInfo
00128208 00000002 b currentBuffer
0012820a 00000001 b enable3d
0012820c 00000004 B gfxBottomFramebufferMaxSize
00128210 00000008 B gfxBottomFramebuffers
00128218 00000004 B gfxSharedMemory
0012821c 00000001 B gfxThreadID
00128220 00000004 B gfxTopFramebufferMaxSize
00128224 00000008 B gfxTopLeftFramebuffers
0012822c 00000008 B gfxTopRightFramebuffers
00128234 00000004 B gspEvent
00128238 00000004 B gspSharedMemHandle
0012823c 00000004 b screenAlloc
00128240 00000004 b screenFree
00128244 0000001c B topFramebufferInfo
00128260 00000004 b boundQueue
00128264 00000004 B gxCmdBuf
00128268 00000004 b curQueue
0012826c 00000001 b isActive
0012826d 00000001 b isRunning
0012826e 00000001 b shouldStop
00128270 00000004 B gpuCmdBuf
00128274 00000004 B gpuCmdBufOffset
00128278 00000004 B gpuCmdBufSize
0012827c 0000000c b aptCookie
00128288 00000001 b bActuallySleeping
00128289 00000001 b bComponentLoaded
0012828a 00000001 b bDspReady
0012828b 00000001 b bNeedsSync
0012828c 00000001 b bSleeping
00128290 00000004 b componentBin
00128294 00000002 b componentDataMask
00128296 00000001 b componentFree
00128298 00000002 b componentProgMask
0012829c 00000004 b componentSize
001282a0 00000004 b droppedFrames
001282a4 00000004 b dspSem
001282a8 00001080 b dspVar5Backup
00129328 00000004 b frameCount
0012932c 00000004 b irqEvent
00129330 00000002 B ndspBufferCurId
00129332 00000002 B ndspBufferId
00129334 00000002 B ndspFrameId
00129338 00000048 b ndspMaster
00129380 00000004 b ndspMutex
00129384 00000004 b ndspRefCount
00129388 00000004 b ndspThread
0012938c 00000001 b ndspThreadRun
00129390 00000080 B ndspVars
00129410 00000008 b sleepEvent
00129418 00000c60 b ndspChn
0012a078 00000004 b gspEvent
0012a07c 0000001c b gspEventCb
0012a098 0000001c b gspEventCbData
0012a0b4 00000007 b gspEventCbOneShot
0012a0bc 0000001c b gspEventCounts
0012a0d8 00000004 b gspEventData
0012a0dc 00000004 b gspEventThread
0012a0e0 00000038 b gspEvents
0012a118 00000004 B gspGpuHandle
0012a11c 00000004 b gspRefCount
0012a120 00000001 b gspRunEvents
0012a124 00000004 b acHandle
0012a128 00000004 b acRefCount
0012a12c 00000004 b cfguHandle
0012a130 00000004 b cfguRefCount
0012a134 00000004 b dspHandle
0012a138 00000004 b dspRefCount
0012a140 00000080 b fsExemptArchives
0012a1c0 00000004 b fsuHandle
0012a1c4 00000004 b fsuRefCount
0012a1c8 00000001 b aptChainloadMediatype
0012a1d0 00000008 b aptChainloadTid
0012a1d8 00000004 b aptEventHandlerThread
0012a1dc 0000000c b aptEvents
0012a1e8 0000000c b aptFirstHook
0012a1f4 00000001 b aptHomeButtonState
0012a1f8 00000004 b aptLockHandle
0012a1fc 00000004 b aptMessageFunc
0012a200 00000004 b aptMessageFuncData
0012a204 00001000 b aptParameters
0012b204 00000001 b aptRecentHomeButtonState
0012b208 00000004 b aptRefCount
0012b20c 00000008 b aptSleepEvent
0012b214 00000001 b flagInit.1
0012b215 00000001 b flagValue.0
0012b218 00000004 b serviceName.3
0012b21c 00000004 b ptmuHandle
0012b220 00000004 b ptmuRefCount
0012b224 00000006 b aVec
0012b22c 00000004 b cPos
0012b230 00000006 b gRate
0012b238 00000014 B hidEvents
0012b24c 00000004 B hidHandle
0012b250 00000004 B hidMemHandle
0012b254 00000004 b hidRefCount
0012b258 00000004 B hidSharedMem
0012b25c 00000004 b kDown
0012b260 00000004 b kHeld
0012b264 00000004 b kOld
0012b268 00000004 b kUp
0012b26c 00000004 b tPos
0012b270 00000004 b srvPmHandle
0012b274 00000004 b ptmSysmHandle
0012b278 00000004 b ptmSysmRefCount
0012b27c 00000004 B __system_retAddr
0012b280 00000004 B __ctru_heap
0012b284 00000004 V __ctru_heap_size
0012b288 00000004 B __ctru_linear_heap
0012b28c 00000004 V __ctru_linear_heap_size
0012b290 00000004 B __system_argc
0012b294 00000004 B __system_argv
0012b298 00000008 b sMappablePool
0012b2a0 0000000c b sAddrMap
0012b2ac 00000004 b csPos
0012b2b0 00000004 B irrstEvent
0012b2b4 00000004 B irrstHandle
0012b2b8 00000004 B irrstMemHandle
0012b2bc 00000004 b irrstRefCount
0012b2c0 00000004 B irrstSharedMem
0012b2c4 00000004 b kHeld
0012b2c8 00000010 b (anonymous namespace)::emergency_pool
0012b2d8 0000000c b eh_globals
0012b2e4 00000004 b (anonymous namespace)::__new_handler
0012b2e8 00000010 V std::string::_Rep::_S_empty_rep_storage
0012b2f8 00000028 B __malloc_current_mallinfo
0012b320 00000004 B __malloc_max_sbrked_mem
0012b324 00000004 B __malloc_max_total_mem
0012b328 00000004 B __malloc_top_pad
0012b32c 00000004 b heap_start.0
0012b330 00000004 B fake_heap_end
0012b334 00000004 B fake_heap_start
0012b338 00000400 b temp_cwd
0012b738 00000048 B __syscalls
0012b780 000005a0 B __C2Di_Context
0012bd20 B __tls_start
0012d12c B __bss_end__
0012d12c A __end__
0012d12c B __tls_end
